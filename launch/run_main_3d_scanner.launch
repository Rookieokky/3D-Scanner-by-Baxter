<launch>

    <!-- roslaunch scan3d_by_baxter run_main.launch -->
    <arg name="run_node1"  default="true" doc="DEBUG: run node 1"/>
    <arg name="run_node2"  default="false" doc="DEBUG: run node 2"/>
    <arg name="run_node3"  default="false" doc="DEBUG: run node 3"/>

   <!--================================== Parameters ======================================== -->

    <!-- Number of poses the Baxter will move to for taking picture -->
    <param name="num_goalposes" type="int" value="2" /> 

    <!-- The topic for receiving PointCloud2 from Kinect -->
    <param name="topic_name_kinect_cloud" value="/kinect2/qhd/points" /> 

    <!-- File names for readign point cloud and debug -->
    <param name="debug_file_folder" value="$(find scan3d_by_baxter)/data_debug/" /> 
    <!-- <param name="debug_file_name" value="cloud_cluster_"  />
    <param name="debug_file_name" value="milk_and_2bottles_"  /> -->
    <param name="debug_file_name" value="ColoredICP_"  />

    <!-- File names for saving results -->
    <param name="file_folder" value="$(find scan3d_by_baxter)/data/" /> 
    <param name="file_name_cloud_rotated" value="transed_" /> 
    <param name="file_name_cloud_segmented" value="segmented_" /> 
    <param name="file_name_cloud_final" value="final.pcd" /> 

    <!-- My topics -->
    <param name="topic_n1_to_n2" value="my/robot_end_effector_pose" /> 
    <param name="topic_n2_to_rviz" value="my/cloud_rotated" /> 
    <param name="topic_n2_to_n3" value="my/cloud_segmented" /> 

   <!--================================== Nodes ============================================== -->

   <!-- node 1: main node for controlling work flow -->
    <node if="$(arg run_node1)" 
        name="node1"
        type="n1_work_flow_control.py" 
        pkg="scan3d_by_baxter" output = "screen">
    </node>

   <!-- node 2: read cloud from kinect, filter, remove plane, do clustering, pub -->
    <node if="$(arg run_node2)" 
        name="node2"
        type="n2_filt_and_seg_object" 
        pkg="scan3d_by_baxter" output = "screen">

            <!-- filtering -->
            <param name="x_grid_size" type="double" value="0.005" />     
            <param name="y_grid_size" type="double" value="0.005" />     
            <param name="z_grid_size" type="double" value="0.005" />   

            <!-- segment plane -->
            <param name="plane_distance_threshold" type="double" value="0.01" />     
            <param name="plane_max_iterations" type="int" value="100" />     
            <param name="num_planes" type="int" value="0" />     

            <!-- divide cloud into clusters -->
            <param name="flag_do_clustering" type="bool" value="false" />     
            <param name="cluster_tolerance" type="double" value="0.02" />     
            <param name="min_cluster_size" type="int" value="1000" />     
            <param name="max_cluster_size" type="int" value="10000" />    
    </node>

   <!-- node 3: register clouds -->
    <node if="$(arg run_node3)" 
        name="node3"
        type="n3_register_clouds_to_object.py" 
        pkg="scan3d_by_baxter" output = "screen">
    </node>

   <!--================================== rviz ============================================== -->

    <!-- <node type="rviz" name="rviz" pkg="rviz"
        args="-d $(find scan3d_by_baxter)/config/rviz_pc_only.rviz" /> -->

</launch>

